{"version":3,"sources":["components/FirstTask/List/List.js","components/FirstTask/Details/Details.js","components/FirstTask/FirstTask.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","useState","loading","setLoading","data","setData","useContext","ActiveI","active","setActive","useEffect","a","fetch","response","ok","Error","statusText","json","respData","console","error","id","name","fetchData","className","map","item","onClick","style","backgroundColor","color","Details","setId","avatar","details","log","Image","src","alt","city","company","position","React","createContext","FirstTask","activeItem","setActiveItem","Provider","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6562b31c.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport \"./desktop.scss\";\nimport { ActiveI } from \"../FirstTask\";\n\nconst List = (props) => {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [active, setActive] = useContext(ActiveI);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(\n          \"https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/hooks-context/use-effect/data/users.json\"\n        );\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        const respData = await response.json();\n        setData(respData);\n        setLoading(false);\n      } catch (e) {\n        console.error(e);\n        setData([{ id: 1, name: \"Произошла ошибка\" }]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handelListItem = (id) => {\n    setActive(id);\n  };\n  return (\n    <div className=\"List\">\n      {loading && <p className=\"list-item \">Loading...</p>}\n      <ul className=\"list-row\">\n        {data.map((item) => {\n          return (\n            <li\n              key={item.id}\n              onClick={() => handelListItem(item.id)}\n              className=\"list-item\"\n              style={\n                active === item.id\n                  ? { backgroundColor: \"rgb(155, 155, 201)\", color: \"white\" }\n                  : null\n              }\n            >\n              {item.name}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport \"./desktop.scss\";\nimport { ActiveI } from \"../FirstTask\";\n\nconst Details = (props) => {\n  const [data, setData] = useState({});\n  const [active] = useContext(ActiveI);\n  const [id, setId] = useState();\n\n  useEffect(() => {\n    if (active > 0 && active !== id) {\n      const fetchData = async () => {\n        try {\n          const response = await fetch(\n            `https://raw.githubusercontent.com/netology-code/ra16-homeworks/master/hooks-context/use-effect/data/${active}.json`\n          );\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          const respData = await response.json();\n          setData(respData);\n          setId(data.id);\n        } catch (e) {\n          console.error(e);\n        } finally {\n        }\n      };\n      fetchData();\n    } else {\n      return null;\n    }\n    // eslint-disable-next-line\n  }, [active]);\n\n  const { avatar, name, details } = data;\n  console.log(data);\n  const Image = ({ avatar }) => {\n    return <img src={avatar} className=\"img \" alt=\"img\"></img>;\n  };\n\n  return (\n    data && (\n      <div id={id} className=\"Details\">\n        <Image avatar={avatar} />\n        <div className=\"name details-item\">{name}</div>\n        <div className=\"city details-item\">\n          City: {details ? details.city : null}\n        </div>\n        <div className=\"company details-item\">\n          Company: {details ? details.company : null}\n        </div>\n        <div className=\"position details-item\">\n          Position: {details ? details.position : null}\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default Details;\n","import React, { useState } from \"react\";\nimport \"./desktop.scss\";\nimport List from \"./List/List\";\nimport Details from \"./Details/Details\";\n\nexport const ActiveI = React.createContext();\n\nexport default function FirstTask() {\n  const [activeItem, setActiveItem] = useState(0);\n\n  return (\n    <ActiveI.Provider value={[activeItem, setActiveItem]}>\n      <div className=\"FirstTask\">\n        <div className=\"FirstTask-row\">\n          <div className=\"left\">\n            <List />\n          </div>\n          <div className=\"right\">\n            <Details />\n          </div>\n        </div>\n      </div>\n    </ActiveI.Provider>\n  );\n}\n","import \"./App.css\";\nimport FirstTask from \"./components/FirstTask/FirstTask\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FirstTask />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}